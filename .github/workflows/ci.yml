name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  validate_schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: npm
      - run: npm ci
      - run: ./node_modules/.bin/dotenv -e .env.test -- ./node_modules/.bin/prisma validate

  unit_test:
    needs:
      - validate_schema
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: npm
      - run: npm ci
      - run: npm test
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  docker_build_push:
    needs:
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-to: type=inline
          platforms: linux/amd64, linux/arm64/v8

  deploy:
    if: github.ref == 'refs/heads/main'
    needs:
      - docker_build_push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger workflow in other repository
        uses: actions/github-script@v6
        with:
          script: |
            const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));

            await github.rest.repos.createDispatchEvent({
              owner: '${{ github.repository_owner }}',
              repo: 'chat-deployment',
              event_type: 'deploy',
            });


            let runStatus = 'queued';
            while (runStatus !== 'completed') {
              const runs = await github.rest.actions.listWorkflowRunsForRepo({
                owner: '${{ github.repository_owner }}',
                repo: 'chat-deployment',
                event: 'repository_dispatch',
                per_page: 1,
              });

              runStatus = runs.data.workflow_runs[0].status;
              console.log(`Workflow run status: ${runStatus}`);

              if (runStatus !== 'completed') {
                await sleep(5000); // wait for 5 seconds before checking the status again
              }
            }

            const runConclusion = runs.data.workflow_runs[0].conclusion;
            if (runConclusion !== 'success') {
              throw new Error(`Workflow did not end in success. Conclusion: ${runConclusion}`);
            }
          github-token: ${{ secrets.DISPATCH_PAT }}
